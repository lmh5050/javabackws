<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.testtoy.repository.LostarkRepository">

    <select id="getCharacterInfoList" resultType="com.example.testtoy.dto.CharacterInfoDto">
        SELECT *
        FROM public.character
        WHERE id = #{username}
        ORDER BY character_name_represent , item_max_level DESC
    </select>

    <select id="getRaidData" resultType="com.example.testtoy.dto.RaidDataDto">
        SELECT *
        FROM public.raid
        ORDER BY raid_level
    </select>

    <insert id="insertRaidData" parameterType="com.example.testtoy.dto.RaidDataDto">
        INSERT INTO raid (
            raid_name,
            gold1,
            gold2,
            gold3,
            reward1,
            plus1,
            plus2,
            plus3,
            raid_max_member
        )
        VALUES (
                   #{raidName},
                    <choose>
                        <when test="gold1 == null or gold1 == ''">NULL</when>
                        <otherwise>CAST(#{gold1} as INTEGER)</otherwise>
                    </choose>,
                    <choose>
                        <when test="gold2 == null or gold2 == ''">NULL</when>
                        <otherwise>CAST(#{gold2} as INTEGER)</otherwise>
                    </choose>,
                    <choose>
                        <when test="gold3 == null or gold3 == ''">NULL</when>
                        <otherwise>CAST(#{gold3} as INTEGER)</otherwise>
                    </choose>,
                    <choose>
                        <when test="reward1 == null or reward1 == ''">NULL</when>
                        <otherwise>#{reward1}</otherwise>
                    </choose>,
                    <choose>
                        <when test="plus1 == null or plus1 == ''">NULL</when>
                        <otherwise>#{plus1}</otherwise>
                    </choose>,
                    <choose>
                        <when test="plus2 == null or plus2 == ''">NULL</when>
                        <otherwise>#{plus2}</otherwise>
                    </choose>,
                    <choose>
                        <when test="plus3 == null or plus3 == ''">NULL</when>
                        <otherwise>#{plus3}</otherwise>
                    </choose>,
                    <choose>
                        <when test="raidMaxMember == null or raidMaxMember == ''">NULL</when>
                        <otherwise>#{raidMaxMember}</otherwise>
                    </choose>
               )
    </insert>

    <insert id="insertCharacterData" parameterType="map">
        INSERT INTO character (
        server_name,
        id,
        character_name_represent,
        character_name,
        character_class_name,
        item_max_level,
        class_type
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.serverName},
            #{username},
            #{item.characterNameRepresent},
            #{item.characterName},
            #{item.characterClassName},
            #{item.itemMaxLevel},
            #{item.classType}
            )
        </foreach>
    </insert>

    <insert id="insertWeeklyRaidResultCharacterInfo" parameterType="map">
        INSERT INTO weekly_raid_result (
        id,
        character_name
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{username},
            #{item.characterName}
            )
        </foreach>
    </insert>

    <delete id="deleteRaidData" parameterType="String">
        DELETE FROM public.raid
        WHERE raid_name = #{raidName};
    </delete>

    <select id="getRaidMatchInfo" resultType="com.example.testtoy.dto.RaidMatchDto">
        SELECT chrd.no,
               chrd.character_name,
               chrd.raid_name,
               chrd.id,
               chrd.time,
               chrd.text,
               rd.raid_max_member,
               COUNT(crd_detail.no) AS raid_current_member
        FROM public.character_raid AS chrd
                 JOIN public.raid AS rd
                      ON chrd.raid_name = rd.raid_name
                 LEFT JOIN public.character_raid_detail AS crd_detail
                           ON CAST(chrd.no AS TEXT) = crd_detail.no
        where crd_detail.status::INTEGER != 2  -- varchar에서 integer로 형변환
        GROUP BY chrd.no,
                 chrd.character_name,
                 chrd.raid_name,
                 chrd.id,
                 chrd.time,
                 chrd.text,
                 rd.raid_max_member
        ORDER BY chrd.no DESC;
    </select>

    <select id="selectRaidMatchInfo" parameterType="com.example.testtoy.dto.RaidMatchDto" resultType="com.example.testtoy.dto.RaidMatchDto">
        SELECT *
        FROM public.character_raid
        WHERE raid_name = #{raidName}
        and character_name = #{characterName}
    </select>

    <insert id="insertRaidMatchInfo" parameterType="com.example.testtoy.dto.RaidMatchDto">
        INSERT INTO character_raid (
            id,
            raid_name,
            character_name,
            time,
            text
        )
        VALUES (
                   #{id},
                   #{raidName},
                   #{characterName},
                   #{time},
                   #{text})
    </insert>

    <insert id="insertRaidMatchCharacterInfo" parameterType="com.example.testtoy.dto.RaidMatchDto">
        INSERT INTO postgres.public.character_raid_detail (
            no,
            character_name
        )
        VALUES (
                   #{no},
                   #{characterName}
               )
    </insert>

    <select id="getRaidMatchCharacterInfo" parameterType="String" resultType="com.example.testtoy.dto.RaidMatchCharacterDto">
        SELECT cha.character_name,
               cha.item_max_level,
               cha.character_class_name,
               cha.class_type,
               crd.status
        FROM public.character AS cha
                 LEFT JOIN public.character_raid_detail AS crd
                           ON cha.character_name = crd.character_name
        WHERE crd.no = #{raidNumber}
          AND   crd.status::INTEGER != 2  -- varchar에서 integer로 형변환
        ORDER BY cha.class_type ASC
    </select>

    <select id="getRaidMatchApplyRaid" parameterType="String" resultType="com.example.testtoy.dto.RaidApplyCharacterInfoDto">
        SELECT  id,
                character_name,
                item_max_level,
                character_class_name,
                class_type
        FROM public.character
        where id = #{id}
    </select>

    <insert id="insertRaidApplyData" parameterType="com.example.testtoy.dto.RaidMatchDto">
        INSERT INTO character_raid_detail (
            no,
            character_name,
            id,
            status
        )
        VALUES (
                   #{raidNo},
                   #{characterName},
                   #{username},
                   '0')
    </insert>

    <select id="getGoldCheck" parameterType="String" resultType="com.example.testtoy.dto.WeeklyCharacterResultDto">
        select
            wrr.character_name ,
            cha.item_max_level,
            wrr.id,
            wrr.karmen,
            wrr.echidna,
            wrr.behimoth,
            wrr.karmen4,
            wrr.egir,
            wrr.abrellshould,
            wrr.chaos,
            wrr.guardian,
            wrr.epona,
            wrr.guildexchange
        from
            weekly_raid_result wrr
                inner join
            character as cha
            on
                wrr.character_name  = cha.character_name
        where
            wrr.id = #{id}
    </select>

    <update id="updateGoldCheckList" parameterType="com.example.testtoy.dto.RaidMatchDto">
        UPDATE weekly_raid_result
        SET karmen = #{karmen},
            echidna = #{echidna},
            behimoth = #{behimoth},
            karmen4 = #{karmen4},
            egir = #{egir},
            abrellshould = #{abrellshould},
            chaos = #{chaos},
            guardian = #{guardian},
            epona = #{epona},
            guildexchange = #{guildexchange}
        WHERE character_name = #{characterName};
    </update>

    <update id="updateRaidParticipate" parameterType="com.example.testtoy.dto.RaidMatchConfirmDto">
        UPDATE character_raid_detail
        SET status = #{status}
        WHERE character_name = #{characterName}
        AND no = #{raidNo};
    </update>

</mapper>
